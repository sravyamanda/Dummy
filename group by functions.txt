


Create EMPLOYEE99(
ID INT,
NAME VARCHAR2(20),
DEPARTMENT VARCHAR2(20),
SALARY INT
);

INSERT INTO EMPLOYEE99 VALUES (1,'Rajiv','IT',54000);

INSERT INTO EMPLOYEE99 VALUES (2,'Kiran','Admin',34000);

INSERT INTO EMPLOYEE99 VALUES (3,'Bharath','IT',60000);

INSERT INTO EMPLOYEE99 VALUES (4,'Shankar','Sales',54000);

INSERT INTO EMPLOYEE99 VALUES (5,'Subhash','Admin',24000);

INSERT INTO EMPLOYEE99 VALUES (6,'Bhaskar','Sales',94000);

select Name from EMPLOYEE99 where department = 'IT' or department = 'Sales';

select Name from EMPLOYEE99 where department in('IT','Sales');

select distinct(department) from EMPLOYEE99;

select department, avg(salary) from employee99 group by(department);

select department, avg(salary) from employee99 group by(department) having avg(salary) > 50000;

select Department_code,count(*) from staff_master group by department_code having count(*) > 5;

write query to print employee details with highest salary;

SELECT NAME,SALARY FROM EMPLOYEE99 WHERE SALARY=(SELECT MAX(SALARY) FROM EMPLOYEE99); 

write query to print employee details with second highest salary;

SELECT NAME,SALARY FROM EMPLOYEE99 WHERE SALARY=(SELECT MAX(SALARY) FROM EMPLOYEE99 WHERE SALARY < (sELECT MAX(SALARY) FROM EMPLOYEE99);

CREATE TABLE EMPLOYEE98(

ID INT PRIMARY KEY,

NAME VARCHAR2(20) NOT NULL,

AGE INT CHECK(AGE>14),

EMAILID VARCHAR2(20) UNIQUE, 

COMPANY VARCHAR2(20) DEFAULT('cAPGEMINI')
);

INSERT INTO EMPLOYEE98 VALUES (1,'Rajiv', 22, 'test@test>com', 'CAPGEMINI');

INSERT INTO EMPLOYEE98 (ID,NAME,AGE,EMAILID) VALUES (2,'Kiran',23,'test@test>com');=====UNIQUE CONSTRAINT VIOLATED

INSERT INTO EMPLOYEE98 (ID,NAME,AGE,EMAILID) VALUES (3,'Kiran',12,'test@test2>com');


INSERT INTO EMPLOYEE98 (ID,NAME,AGE,EMAILID) VALUES (2,'Kiran',23,NULL);

CREATE TABLE ADDRESS98(

ADDRESSID INT,

ID REFERENCES EMPLOYEE98(ID)
);

PRIMARY KEY:
============

1.a TABLE CAN HAVE ONLY ONE PRIMARY KEY
2.PRIMARY KEY IS USED TO UNIQUELY IDENTIFY A PARTICULAR RECORD
3.PRIMARY KEY WILL NOT ALLOW NULL VALUES
4.PRIMARY KEY WILL NOT ALLOW DUPLICATE VALUES
5.A PRIMARY KEY FORMED WITH COMBINATION OF MULTIPLE COLUMNS IS CALLED COMPOSITE PRIMARY KEY

UNIQUE DAY:
===========

1.A TABLE CAN HAVE MORE THAN ONE UNIQUE KEY
2.UNIQUE KEY WILL ALLOW NULL VALUES
3.UNIQUE KEY WILL NOT ALLOW DUPLICATE VALUES


CREATE TABLE CUSTOMER(
CID INT PRIMARY KEY,
CNAME VARCHAR2(20)
);

CREATE TABLE ORDERS
(
OID INT PRIMARY KEY,
CID INT REFERENCES CUSTOMER(CID),
OFFICE INT);

INSERT INTO CUSTOMER VALUES(1001,'Rajiv');

INSERT INTO ORDERS VALUES(5001,1001,24000);


CREATE TABLE ITEMPLOYEE99 AS SELECT NAME,ID,DEPARTMENT,SALARY FROM EMPLOYEE99 WHERE DEPARTMENT = 'IT';


ALTER TABLE MODIFY EMAILID(25);

CREATE TABLE PRODUCTS 
(
PID INT CONSTRAINT PID_PK PRIMARY KEY,
PNAME VARCHAR(20) CONSTRAINT PNAME_UK UNIQUE
);


ALTER TABLE PRODUCTS RENAME COLUMN PNAME TO PRODUCTNAME;













